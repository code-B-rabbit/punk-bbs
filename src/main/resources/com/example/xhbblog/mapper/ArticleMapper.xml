<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.xhbblog.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.example.xhbblog.pojo.Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="firstPicture" property="firstPicture" jdbcType="VARCHAR" />
    <result column="visit" property="visit" jdbcType="BIGINT" />
    <result column="published" property="published" jdbcType="BIT" />
    <result column="top" property="top" jdbcType="BIT" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.xhbblog.pojo.ArticleWithBLOBs" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="info" property="info" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, tid, createTime, title, firstPicture, visit, published, top, uid
  </sql>
  <sql id="Blob_Column_List" >
    content, info
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.example.xhbblog.pojo.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.xhbblog.pojo.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.xhbblog.pojo.ArticleWithBLOBs" useGeneratedKeys="true" keyProperty="id" >
    insert into article (tid, createTime, title,
      firstPicture, visit, published,
      top, uid, content,
      info)
    values (#{tid,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{title,jdbcType=VARCHAR},
      #{firstPicture,jdbcType=VARCHAR}, #{visit,jdbcType=BIGINT}, #{published,jdbcType=BIT},
      #{top,jdbcType=BIT}, #{uid,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR},
      #{info,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.xhbblog.pojo.ArticleWithBLOBs" useGeneratedKeys="true" keyProperty="id" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        tid,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="firstPicture != null" >
        firstPicture,
      </if>
      <if test="visit != null" >
        visit,
      </if>
      <if test="published != null" >
        published,
      </if>
      <if test="top != null" >
        top,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="info != null" >
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="firstPicture != null" >
        #{firstPicture,jdbcType=VARCHAR},
      </if>
      <if test="visit != null" >
        #{visit,jdbcType=BIGINT},
      </if>
      <if test="published != null" >
        #{published,jdbcType=BIT},
      </if>
      <if test="top != null" >
        #{top,jdbcType=BIT},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="info != null" >
        #{info,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.xhbblog.pojo.ArticleWithBLOBs" >
    update article
    <set >
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="firstPicture != null" >
        firstPicture = #{firstPicture,jdbcType=VARCHAR},
      </if>
      <if test="visit != null" >
        visit = #{visit,jdbcType=BIGINT},
      </if>
      <if test="published != null" >
        published = #{published,jdbcType=BIT},
      </if>
      <if test="top != null" >
        top = #{top,jdbcType=BIT},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.xhbblog.pojo.ArticleWithBLOBs" >
    update article
    set tid = #{tid,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      firstPicture = #{firstPicture,jdbcType=VARCHAR},
      visit = #{visit,jdbcType=BIGINT},
      published = #{published,jdbcType=BIT},
      top = #{top,jdbcType=BIT},
      uid = #{uid,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      info = #{info,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.xhbblog.pojo.Article" >
    update article
    set tid = #{tid,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      title = #{title,jdbcType=VARCHAR},
      firstPicture = #{firstPicture,jdbcType=VARCHAR},
      visit = #{visit,jdbcType=BIGINT},
      published = #{published,jdbcType=BIT},
      top = #{top,jdbcType=BIT},
      uid = #{uid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findByTid" resultMap="ResultMapWithBLOBs">
    SELECT a.* FROM article a
    <if test="order!=null">
      <if test="order.by=='comment'">
        LEFT JOIN comment c
        ON c.aid=a.id
        where a.tid=#{tid}
        <if test='uid!=null'>
          AND a.uid=#{uid}
        </if>
        <if test='published!=null'>
          AND published=#{published}
        </if>
        GROUP BY a.id
        ORDER BY COUNT(c.id)
      </if>
      <if test="order.by=='thumb'">
        LEFT JOIN thumbs t
        ON t.aid=a.id
        where a.tid=#{tid}
        <if test='uid!=null'>
          AND a.uid=#{uid}
        </if>
        <if test='published!=null'>
          AND published=#{published}
        </if>
        GROUP BY a.id
        ORDER BY COUNT(t.id)
      </if>
      <if test="order.by=='visit'">
        where a.tid=#{tid}
        <if test='uid!=null'>
          AND a.uid=#{uid}
        </if>
        <if test='published!=null'>
          AND published=#{published}
        </if>
        ORDER BY visit
      </if>
      <if test="order.direct=='DESC'">
        DESC
      </if>
    </if>

    <if test="order==null">
      where a.tid=#{tid}
      <if test='uid!=null'>
        AND a.uid=#{uid}
      </if>
      <if test='published!=null'>
        AND published=#{published}
      </if>
      ORDER BY id DESC
    </if>
  </select>



  <select id="findAll" resultMap="ResultMapWithBLOBs">
    SELECT a.* FROM article a
    <if test="order!=null">
      <if test="order.by=='comment'">
        LEFT JOIN comment c
        ON c.aid=a.id
        where 1=1
        <if test='uid!=null'>
          AND a.uid=#{uid}
        </if>
        <if test='published!=null'>
          AND published=#{published}
        </if>
        GROUP BY a.id
        ORDER BY COUNT(c.id)
      </if>
      <if test="order.by=='thumb'">
        LEFT JOIN thumbs t
        ON t.aid=a.id
        where 1=1
        <if test='uid!=null'>
          AND a.uid=#{uid}
        </if>
        <if test='published!=null'>
          AND published=#{published}
        </if>
        GROUP BY a.id
        ORDER BY COUNT(t.id)
      </if>
      <if test="order.by=='visit'">
        where 1=1
        <if test='uid!=null'>
          AND a.uid=#{uid}
        </if>
        <if test='published!=null'>
          AND published=#{published}
        </if>
        ORDER BY visit
      </if>
      <if test="order.direct=='DESC'">
        DESC
      </if>

    </if>
    <if test="order==null">
      where a.top=false
      <if test='uid!=null'>
        AND a.uid=#{uid}
      </if>
      <if test='published!=null'>
        AND published=#{published}
      </if>
      ORDER BY id DESC
    </if>
  </select>


  <select id="findArticleLike" resultMap="ResultMapWithBLOBs">
    SELECT a.* FROM article a
    <if test="order!=null">
      <if test="order.by=='comment'">
        LEFT JOIN comment c
        ON c.aid=a.id
        where a.id IN (select id from article c where c.info like #{string} or title like #{string})
        <if test='uid!=null'>
          AND a.uid=#{uid}
        </if>
        <if test='published!=null'>
          AND published=#{published}
        </if>
        GROUP BY a.id
        ORDER BY COUNT(c.id)
      </if>
      <if test="order.by=='thumb'">
        LEFT JOIN thumbs t
        ON t.aid=a.id
        where  a.id IN (select id from article c where c.info like #{string} or title like #{string})
        <if test='uid!=null'>
          AND a.uid=#{uid}
        </if>
        <if test='published!=null'>
          AND published=#{published}
        </if>
        GROUP BY a.id
        ORDER BY COUNT(t.id)
      </if>
      <if test="order.by=='visit'">
        where  a.id IN (select id from article c where c.info like #{string} or title like #{string})
        <if test='uid!=null'>
          AND a.uid=#{uid}
        </if>
        <if test='published!=null'>
          AND published=#{published}
        </if>
        ORDER BY visit
      </if>
      <if test="order.direct=='DESC'">
        DESC
      </if>

    </if>
    <if test="order==null">
      where  a.id IN (select id from article c where c.info like #{string} or title like #{string})
      <if test='uid!=null'>
        AND a.uid=#{uid}
      </if>
      <if test='published!=null'>
        AND published=#{published}
      </if>
      ORDER BY id DESC
    </if>
  </select>


</mapper>